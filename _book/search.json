[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "intro-shell-cmd-line",
    "section": "",
    "text": "Preface"
  },
  {
    "objectID": "index.html#why-learn-how-to-use-the-shell",
    "href": "index.html#why-learn-how-to-use-the-shell",
    "title": "intro-shell-cmd-line",
    "section": "Why learn how to use the shell",
    "text": "Why learn how to use the shell\nThere are many reasons to learn about the shell.\n\nFor most bioinformatics tools, you have to use the shell. There is no graphical interface. If you want to work in metagenomics or genomics you’re going to need to use the shell.\nThe shell gives you power. The command line gives you the power to do your work more efficiently and more quickly. When you need to do things tens to hundreds of times, knowing how to use the shell is transformative.\nTo use remote computers or cloud computing, you need to use the shell.\nWe’re going to use it in this class, for all of the reasons above."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "intro.html#objectives",
    "href": "intro.html#objectives",
    "title": "1  Introduction",
    "section": "1.1 Objectives",
    "text": "1.1 Objectives\n\nWhat is the shell?\nHow do you access it?\nHow do you use it?\n\nGetting around the Unix file system\nlooking at files\nmanipulating files\nautomating tasks\n\nWhat is it good for?\nWhere are resources where I can learn more? (because the shell is awesome)"
  },
  {
    "objectID": "intro.html#what-is-the-shell",
    "href": "intro.html#what-is-the-shell",
    "title": "1  Introduction",
    "section": "1.2 What is the shell?",
    "text": "1.2 What is the shell?\nThe shell is a program that presents a command line interface which allows you to control your computer using commands entered with a keyboard instead of controlling graphical user interfaces (GUIs) with a mouse/keyboard combination.\nThere are many reasons to learn about the shell.\n\nFor most bioinformatics tools, you have to use the shell. There is no graphical interface. If you want to work in metagenomics or genomics you’re going to need to use the shell.\nThe shell gives you power. The command line gives you the power to do your work more efficiently and more quickly. When you need to do things tens to hundreds of times, knowing how to use the shell is transformative.\nTo use remote computers or cloud computing, you need to use the shell.\nWe’re going to use it in this class, for all of the reasons above.\n\n\n\n\nAutomation\n\n\nUnix is user-friendly. It’s just very selective about who its friends are. - Anonymous\nToday we’re going to go through how to access Unix/Linux and some of the basic shell commands."
  },
  {
    "objectID": "intro.html#information-on-the-shell",
    "href": "intro.html#information-on-the-shell",
    "title": "1  Introduction",
    "section": "1.3 Information on the shell",
    "text": "1.3 Information on the shell\nShell cheat sheets:\n\nhttp://fosswire.com/post/2007/08/unixlinux-command-cheat-sheet/\nhttps://github.com/swcarpentry/boot-camps/blob/master/shell/shell_cheatsheet.md\n\nExplain shell - a web site where you can see what the different components of a shell command are doing.\n\nhttp://explainshell.com\nhttp://www.commandlinefu.com"
  },
  {
    "objectID": "intro.html#outline",
    "href": "intro.html#outline",
    "title": "1  Introduction",
    "section": "1.4 Outline",
    "text": "1.4 Outline\n\nA shell use case\nHow to access the shell"
  },
  {
    "objectID": "intro.html#an-automation-use-case",
    "href": "intro.html#an-automation-use-case",
    "title": "1  Introduction",
    "section": "1.5 An automation use case",
    "text": "1.5 An automation use case\nText Complexity in Newspapers pdf\nAnother newspaper case\nGet the front page of the newspaper from a particular newspaper in different years\nhttp://chroniclingamerica.loc.gov/lccn/sn98066406/issues/first_pages/\nCount occurances of a particular word"
  },
  {
    "objectID": "intro.html#how-to-access-the-shell",
    "href": "intro.html#how-to-access-the-shell",
    "title": "1  Introduction",
    "section": "1.6 How to access the shell",
    "text": "1.6 How to access the shell\nThe shell is already available on Mac and Linux. For Windows, you’ll have to download a separate program."
  },
  {
    "objectID": "intro.html#mac",
    "href": "intro.html#mac",
    "title": "1  Introduction",
    "section": "1.7 Mac",
    "text": "1.7 Mac\nOn Mac the shell is available through Terminal Applications -> Utilities -> Terminal Go ahead and drag the Terminal application to your Dock for easy access."
  },
  {
    "objectID": "intro.html#windows",
    "href": "intro.html#windows",
    "title": "1  Introduction",
    "section": "1.8 Windows",
    "text": "1.8 Windows\nFor Windows, we’re going to be using gitbash. Download and install gitbash Open up the program."
  },
  {
    "objectID": "intro.html#linux",
    "href": "intro.html#linux",
    "title": "1  Introduction",
    "section": "1.9 Linux",
    "text": "1.9 Linux\nWell, you should be set."
  },
  {
    "objectID": "intro.html#starting-with-the-shell",
    "href": "intro.html#starting-with-the-shell",
    "title": "1  Introduction",
    "section": "1.10 Starting with the shell",
    "text": "1.10 Starting with the shell\nWe will spend most of our time learning about the basics of the shell by manipulating some experimental data from a hearing test.\nWe’re going to create a directory that we’re going to do this work in and then download the data.\nTo create the directory type:\nmkdir edamame\nThis means, make directory ‘edamame’\nNow we’re going to go in to that directory\ncd edamame\nThis stands for ‘change directory’\nNow let’s look at see what’s in here. There should be nothing right now, because we just made it, but let’s check. Type: ls\nls stands for ‘list’ and it lists the contents of a directory.\nNow we’re going to download the data for the tutorial. For this you’ll need internet access, because you’re going to get it off the web. Enter the command:\ngit clone https://github.com/tracykteal/msu_al340.git\nThis command will grab all of the data needed for this workshop from the internet. (We’re not going to talk about git right now, but it’s a tool for doing version control.)\nNow let’s check to see that we got the data. Again type: ls Now we should see a list of a lot of files, including something called data.\nIn there, all mixed up together are files and directories/folders. If we want to know which is which, we can type: ls -F Anything with a “/” after it is a directory. Things with a “*” after them are programs. If there’s after the name, then it’s a file.\nYou can also use the command ls -l to see whether items in a directory are files or directories. ls -l gives a lot more information too, such as the size of the file\nSo, we can see that we have several files, directories and a program. Great!"
  },
  {
    "objectID": "01-intro.html#objectives",
    "href": "01-intro.html#objectives",
    "title": "1  Introduction",
    "section": "1.1 Objectives",
    "text": "1.1 Objectives\n\nWhat is the shell?\nHow do you access it?\nHow do you use it?\n\nGetting around the Unix file system\nlooking at files\nmanipulating files\nautomating tasks\n\nWhat is it good for?\nWhere are resources where I can learn more? (because the shell is awesome)"
  },
  {
    "objectID": "01-intro.html#what-is-the-shell",
    "href": "01-intro.html#what-is-the-shell",
    "title": "1  Introduction",
    "section": "1.2 What is the shell?",
    "text": "1.2 What is the shell?\nThe shell is a program that presents a command line interface which allows you to control your computer using commands entered with a keyboard instead of controlling graphical user interfaces (GUIs) with a mouse/keyboard combination.\nThere are many reasons to learn about the shell.\n\nFor most bioinformatics tools, you have to use the shell. There is no graphical interface. If you want to work in metagenomics or genomics you’re going to need to use the shell.\nThe shell gives you power. The command line gives you the power to do your work more efficiently and more quickly. When you need to do things tens to hundreds of times, knowing how to use the shell is transformative.\nTo use remote computers or cloud computing, you need to use the shell.\nWe’re going to use it in this class, for all of the reasons above.\n\n\n\n\nAutomation\n\n\nUnix is user-friendly. It’s just very selective about who its friends are. - Anonymous\nToday we’re going to go through how to access Unix/Linux and some of the basic shell commands."
  },
  {
    "objectID": "01-intro.html#information-on-the-shell",
    "href": "01-intro.html#information-on-the-shell",
    "title": "1  Introduction",
    "section": "1.3 Information on the shell",
    "text": "1.3 Information on the shell\nShell cheat sheets:\n\nhttp://fosswire.com/post/2007/08/unixlinux-command-cheat-sheet/\nhttps://github.com/swcarpentry/boot-camps/blob/master/shell/shell_cheatsheet.md\n\nExplain shell - a web site where you can see what the different components of a shell command are doing.\n\nhttp://explainshell.com\nhttp://www.commandlinefu.com"
  },
  {
    "objectID": "01-intro.html#outline",
    "href": "01-intro.html#outline",
    "title": "1  Introduction",
    "section": "1.4 Outline",
    "text": "1.4 Outline\n\nA shell use case\nHow to access the shell"
  },
  {
    "objectID": "01-intro.html#an-automation-use-case",
    "href": "01-intro.html#an-automation-use-case",
    "title": "1  Introduction",
    "section": "1.5 An automation use case",
    "text": "1.5 An automation use case\nText Complexity in Newspapers pdf\nAnother newspaper case\nGet the front page of the newspaper from a particular newspaper in different years\nhttp://chroniclingamerica.loc.gov/lccn/sn98066406/issues/first_pages/\nCount occurances of a particular word"
  },
  {
    "objectID": "01-intro.html#how-to-access-the-shell",
    "href": "01-intro.html#how-to-access-the-shell",
    "title": "1  Introduction",
    "section": "1.1 How to access the shell",
    "text": "1.1 How to access the shell\nYou access the shell using the “terminal”. The terminal is a window into which we will type commands in. The terminal is already available on Mac and Linux. For windows you must download a separate program."
  },
  {
    "objectID": "01-intro.html#mac",
    "href": "01-intro.html#mac",
    "title": "1  Introduction",
    "section": "1.2 Mac",
    "text": "1.2 Mac\nOn Mac the shell is available through Terminal Applications -> Utilities -> Terminal Go ahead and drag the Terminal application to your Dock for easy access."
  },
  {
    "objectID": "01-intro.html#windows",
    "href": "01-intro.html#windows",
    "title": "1  Introduction",
    "section": "1.3 Windows",
    "text": "1.3 Windows\nFor Windows, we’re going to be using gitbash. Download and install gitbash Open up the program."
  },
  {
    "objectID": "01-intro.html#linux",
    "href": "01-intro.html#linux",
    "title": "1  Introduction",
    "section": "1.4 Linux",
    "text": "1.4 Linux\nWell, you should be set."
  },
  {
    "objectID": "01-intro.html#starting-with-the-shell",
    "href": "01-intro.html#starting-with-the-shell",
    "title": "1  Introduction",
    "section": "1.2 Starting with the shell",
    "text": "1.2 Starting with the shell\nWe will spend most of our time learning about the basics of the shell by manipulating some experimental data from a hearing test.\nFirst, we’re going to create a new directory to work in using the command mkdir which stands for “make directory”.\n\n\n\n\n\n\nNote\n\n\n\nThe word “directory” a location for storing files on a computer and it is synonym to “folder”.\n\n\nTo create the directory, we must type the following command in the terminal and hit return to execute the command.\n$ mkdir training\nNow let’s see if our new directory was created using the command ls that stands for “list” or “listing”.\n$ ls\nYou should see your new directory called “training” in the list displayed in the terminal.\nNow we’re going to go into that directory using the command cd which stands for “change directory”.\n$ cd training\nNow let’s look at see what’s in here. There should be nothing right now, because we just made it, but let’s check using the command ls again.\nNow we are going to create a text file using the command touch\n$ touch file.txt\nWe can now check with if the file was created using the ls command again.\nNow we’re going to download the data for this tutorial. For this you’ll need internet access, because you’re going to get it off the web. Enter the command:\ngit clone https://github.com/clarajegousse/training-data\nThis command will grab all of the data needed for this workshop from the internet. (We’re not going to talk about git right now, but it’s a tool for doing version control.)\nNow let’s check to see that we got the data. Again type: ls Now we should see a list of a lot of files, including something called data.\nIn there, all mixed up together are files and directories/folders. If we want to know which is which, we can type: ls -F Anything with a “/” after it is a directory. Things with a “*” after them are programs. If there’s after the name, then it’s a file.\nYou can also use the command ls -l to see whether items in a directory are files or directories. ls -l gives a lot more information too, such as the size of the file\nSo, we can see that we have several files, directories and a program. Great!"
  }
]